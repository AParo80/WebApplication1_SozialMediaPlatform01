// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1_SozialMediaPlatform01.Data;

#nullable disable

namespace WebApplication1_SozialMediaPlatform01.Migrations
{
    [DbContext(typeof(WebApplication1_SozialMediaPlatform01Context))]
    partial class WebApplication1_SozialMediaPlatform01ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("LikeBool")
                        .HasColumnType("bit");

                    b.Property<int?>("NachrichtId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NachrichtId");

                    b.HasIndex("UserId");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.Nachricht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasMaxLength(123)
                        .HasColumnType("nvarchar(123)");

                    b.Property<DateTime>("PostZeitpunkt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Nachricht");
                });

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.NachrichtPeep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NachrichtId")
                        .HasColumnType("int");

                    b.Property<int?>("PeepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NachrichtId");

                    b.HasIndex("PeepId");

                    b.ToTable("NachrichtPeep");
                });

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.Peep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PeepWort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Peep");
                });

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistriertAm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Selbstbeschreibung")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.Like", b =>
                {
                    b.HasOne("WebApplication1_SozialMediaPlatform01.Models.Nachricht", "Nachricht")
                        .WithMany("Like")
                        .HasForeignKey("NachrichtId");

                    b.HasOne("WebApplication1_SozialMediaPlatform01.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Nachricht");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.Nachricht", b =>
                {
                    b.HasOne("WebApplication1_SozialMediaPlatform01.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.NachrichtPeep", b =>
                {
                    b.HasOne("WebApplication1_SozialMediaPlatform01.Models.Nachricht", "Nachricht")
                        .WithMany("NachrichtpeepListe")
                        .HasForeignKey("NachrichtId");

                    b.HasOne("WebApplication1_SozialMediaPlatform01.Models.Peep", "Peep")
                        .WithMany("NachrichtpeepListe")
                        .HasForeignKey("PeepId");

                    b.Navigation("Nachricht");

                    b.Navigation("Peep");
                });

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.Nachricht", b =>
                {
                    b.Navigation("Like");

                    b.Navigation("NachrichtpeepListe");
                });

            modelBuilder.Entity("WebApplication1_SozialMediaPlatform01.Models.Peep", b =>
                {
                    b.Navigation("NachrichtpeepListe");
                });
#pragma warning restore 612, 618
        }
    }
}
